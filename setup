#!/bin/bash 

main() {

if [[ -z "$1"  ]]; then echo 'Specify language'
else
  language="$1"

  case $language in 

  go)
    setup "golang" "go"
  ;;

  js)
    setup "node:latest" "js"
  ;;

  kt)
    setup "zenika/kotlin" "kt"
  ;;

  ktg)
    setup "gradle" "ktg"
  ;;

  java)
    setup "openjdk:latest" "java"
  ;;

  javag)
    setup "gradle" "javag"
  ;;

  py) 
    setup "python:3.9" "python"
  ;;

  rust)
    setup "rust" "rust"
  ;;

  jsdeno) 
    setup "denoland/deno" "deno"
  ;;

  cpp) 
    setup "gcc:latest" "cpp"
  ;;

  c) 
    setup "gcc:latest" "c"
  ;;

  *) 
  exit
  ;;

esac

fi

}


setup () {

  dockerimage=$1
  language=$2
 
  if [ -f "Dockerfile" ]; then
    rm Dockerfile
  fi

  touch Dockerfile
  echo "FROM docker.io/${dockerimage}" >> Dockerfile
  echo "WORKDIR /code" >> Dockerfile
  echo "RUN 'cat docker-prompt >> ~/.bashrc'"

  copyfiles ${language}
  
  podman build -t "${language}-sandbox" .
  podman run -dit --name "${language}-proj" -e "containername=${language}-proj" \
    -v "$(pwd):/code" "${language}-sandbox" bash 
  podman exec -it "${language}-proj" bash -c "cat docker-prompt >> ~/.bashrc && bash"

  touch config
  echo ${language} > config
}

copyfiles () {
  (
  language=$1
  mkdir ${language}
  cd scaffold/${language} || exit

  if [ -d "src" ]; then
    cp -r src ../../${language}
  fi

  cp ./* -r ../../${language}

  )
  (
  cd ${language}
  )
}

main "$@"
